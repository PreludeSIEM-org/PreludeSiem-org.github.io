#####
#
# Copyright (C) 2008 Daniel Kopecek <dkopecek at redhat dot com>, Peter Vrabec <pvrabec at redhat dot com>
# All Rights Reserved
#
# This file is part of the Prelude-LML program.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; see the file COPYING.  If not, write to
# the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
#
#####
# The rules developed using mod_security-2.1.6. 
#####

# 3600-3600
regex=\[severity "(?:EMERGENCY|ALERT|CRITICAL|ERROR)"\]; \
 id=3600; \
 assessment.impact.severity=high; \
 chained; silent; 

regex=\[severity "WARNING"\]; \
 id=3601; \
 assessment.impact.severity=medium; \
 chained; silent;

regex=\[severity "NOTICE"\]; \
 id=3602; \
 assessment.impact.severity=low; \
 chained; silent; 

regex=\[severity "(?:INFO|DEBUG)"\]; \
 id=3603; \
 assessment.impact.severity=info; \
 chained; silent; 

regex=\[msg "([^"]+)"\]; \
 id=3604; \
 classification.reference(0).meaning=$1; \
 classification.reference(0).origin=vendor-specific; \
 chained; silent;

regex=\[hostname "(\S+)"\]; \
 id=3605; \
 target(0).node.address(1).address=$1; \
 chained; silent;

regex=\[id "(\d+)"\]; \
 id=3606; \
 additional_data(1).type=integer; \   
 additional_data(1).meaning=ModSec Rule ID; \
 additional_data(1).data=$1; \
 chained; silent;

regex=\[unique_id "(\S+)"\]; \
 id=3607; \
 additional_data(2).type=string; \
 additional_data(2).meaning=Unique ID; \
 additional_data(2).data=$1; \
 chained; silent;

# 3200-3201;
regex=Match of "(.+)" against "(\S+)" required\.; optgoto=3600-3607; \
 id=3200; \
 assessment.impact.description=ModSecurity found pattern match "$1" in HTTP object $2.; \
 chained; silent; 

regex=Operator ([A-Z]{2}) match: (\d+)\.; optgoto=3600-3607; \
 id=3201; \
 assessment.impact.description=ModSecurity found operator "$1" match "$2".; \
 chained; silent;

regex=Pattern match "(.+)" at (\S+)\.; optgoto=3600-3607; \
 id=3202; \
 assessment.impact.description=ModSecurity found pattern match "$1" in HTTP object $2.; \
 chained; silent;  

# 3300-3300; Access denied + ...
regex=with code (\d+) \(phase \d\)\.; optgoto=3200-3202; \
 id=3300; \
 assessment.action(0).category = block-installed; \
 assessment.action(0).description = Access was blocked with HTTP response code $1.; \
 chained; silent;  

regex=using proxy to \(phase (\d+)\) (\S+)\.; optgoto=3200-3202; \
 id=3301; \
 assessment.action(0).category = block-installed; \
 assessment.action(0).description = Access was denied using proxy to $2.; \
 chained; silent; 

regex=with redirection to (\S+) using status (\d+) \(phase (\d+)\)\.; optgoto=3200-3202; \
 id=3302; \
 assessment.action(0).category = block-installed; \
 assessment.action(0).description = Access was redirected to $1.; \
 chained; silent;
 
regex=with connection close \(phase (\d+)\).; optgoto=3200-3202; \
 id=3303; \
 assessment.action(0).category = block-installed; \
 assessment.action(0).description = Connection was closed.; \
 chained; silent;

# 3000-3002
regex=Warning\.; optgoto=3200-3201; \
 id=3001; \
 classification.text=HTTP Warning.; \
 assessment.impact.completion=succeeded; \
 chained; silent;

regex=Access denied; optgoto=3300-3303; \
 id=3002; \
 classification.text=HTTP Access denied.; \
 assessment.impact.completion=failed; \
 chained; silent;

regex=\[client ([\d\.]+)\] ModSecurity:.*\[uri "([^"]+)"\]; optgoto=3001-3002; \
 id=3000; \
 analyzer(0).name=ModSecurity; \
 analyzer(0).manufacturer=www.modsecurity.org; \
 analyzer(0).class=HIDS; \
 source(0).service.iana_protocol_name=tcp; \
 source(0).service.iana_protocol_number=6; \
 source(0).node.address(0).category=ipv4-addr; \
 source(0).node.address(0).address=$1; \
 target(0).service.iana_protocol_name=tcp; \
 target(0).service.iana_protocol_number=6; \
 target(0).service.name=http; \
 additional_data(0).type=string; \
 additional_data(0).meaning=URI; \
 additional_data(0).data=$2; \
 last
